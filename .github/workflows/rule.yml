name: Manage Lock Branch Protection

on:

  workflow_dispatch:

    inputs:

      branch:

        description: 'Branch name to update'

        required: true

        default: 'main'

      action:

        description: 'Action to perform (enable or disable lock branch)'

        required: true

        default: 'enable'

        type: choice

        options:

          - enable

          - disable

jobs:

  manage_lock_branch:

    runs-on: ubuntu-latest

    steps:

    - name: Get existing branch protection settings

      id: get_protection

      uses: actions/github-script@v6

      with:

        script: |

          const branch = context.payload.inputs.branch;

          const owner = context.repo.owner;

          const repo = context.repo.repo;

          try {

            const response = await github.rest.repos.getBranchProtection({

              owner,

              repo,

              branch

            });

            return JSON.stringify(response.data);

          } catch (error) {

            return JSON.stringify({});

          }

      env:

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Manage lock branch protection

      uses: actions/github-script@v6

      with:

        script: |

          const branch = context.payload.inputs.branch;

          const action = context.payload.inputs.action;

          const lockBranch = action === 'enable';

          const owner = context.repo.owner;

          const repo = context.repo.repo;

          const existingProtection = JSON.parse(process.env.GET_PROTECTION);

          const protectionSettings = {

            required_status_checks: existingProtection.required_status_checks || null,

            enforce_admins: existingProtection.enforce_admins || false,

            required_pull_request_reviews: existingProtection.required_pull_request_reviews || null,

            restrictions: existingProtection.restrictions || null,

            lock_branch: lockBranch

          };

          await github.rest.repos.updateBranchProtection({

            owner,

            repo,

            branch,

            ...protectionSettings

          });

      env:

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        GET_PROTECTION: ${{ steps.get_protection.outputs.result }}
 
